c
decode_token = JsonWebToken.decode(token)
n
authorization_header.split(" ").last
authorization_header.split(" ")
authorization_header.split
authorization_header
n
request.headers['Authorization']
c
user&.authenticate(params[:user][:password])
n
c
user&.authenticate(params[:user][:password])
user
n
c
params
user = User.find_by(email: params[:email])
user
params
user&.authenticate(params[:user][:password])
n
c
n
user&.authenticate(params[:user][:password])
user
n
c
User.find_by(username: params[:username])
User.find_by(username: params[:user][:username])
user
n
c
user
n
params
c
n
c
user&.authenticate(params[:password_digest])
user&.authenticate(params[:user][:password_digest])
user
n
nn
params
c
params
user&.authenticate(params[:user][:password_digest])
user&.authenticate(params[:user][:password])
n
User.find_by_email(params[:user][:email])
params
c
user&.authenticate(params[:user][:password])
n
User.find_by_email(params[:user][:email])
params
c
params[:user][:email]
User.find_by_email(params[:user][:email])
User.find_by_email(params[:email])
params
c
User.find_by_email(params[:email])
User.find_by_email(params[:user][:email])
params
c
params[:user][:email]
params[:user}[:email]
params[:email]
psrparams[:email]
params
c
params
params[:username]
User.find_by(username: "john123")
User.all
 User.find_by(username: params[:username])
params
